name: Update

on:
  schedule:
    - cron: '0 6 * * *'

jobs:
  Update_schema:
    runs-on: ubuntu-latest
    env:
      NEW_SCHEMA_ALVAIBLE: false
    steps:
      - uses: actions/checkout@v2
      - name: Download new schema if available
        shell: bash
        run: |
          LATEST_BACKEND_ARTIFACT=$(python3 << END
          import requests
          import json
          import time
          from requests.api import request

          URL = 'https://api.github.com/repos/MariuszBielecki288728/HomeKeeper-backend/actions'

          last_succ_workflow = []
          while not last_succ_workflow:
              last_succ_workflow = json.loads(
                  requests.get(
                     URL + '/runs',
                      params={
                          'branch': 'main',
                          'status': 'success',
                          'event': 'push',
                     },
                     headers={
                         'Accept': 'application/vnd.github.v3+json'
                     }).text)
             time.sleep(3)

          archive_download_url = json.loads(
              requests.get(
                  last_succ_workflow['workflow_runs'][0]['artifacts_url'],
                  params={
                      'per_page': 1
                  },
                  headers={
                      'Accept': 'application/vnd.github.v3+json'
                  }).text)

          print(archive_download_url['artifacts'][0]['archive_download_url'])
          END)

          SCHEMA_FILENAME="schema.zip"
          curl \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            $LATEST_BACKEND_ARTIFACT \
            -L -o $SCHEMA_FILENAME
          unzip $SCHEMA_FILENAME -d new_schema

          if diff -q --ignore-all-space --ignore-blank-lines schema.graphql new_schema/schema.graphql &> /dev/null
          then
            echo "A newer schema is not available"
          else
            echo "NEW_SCHEMA_ALVAIBLE=true" >> $GITHUB_ENV
          fi

          cat new_schema/schema.graphql > schema.graphql
          rm -rf new_schema $SCHEMA_FILENAME

      - name: Create pull request
        uses: peter-evans/create-pull-request@v3
        if: ${{ env.NEW_SCHEMA_ALVAIBLE == 'true' }}
        with:
          commit-message: Update schema
          title: Update schema
          branch: schema_update
